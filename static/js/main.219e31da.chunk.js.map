{"version":3,"sources":["style/GlobalStyle.js","components/Nav.js","withSplitting.js","pages/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","reset","link","color","transition","active","Wrap","styled","nav","Nav_templateObject","Nav","react_default","a","createElement","Fragment","NavLink","exact","to","activeStyle","style","QuoteLeft","size","Joystick","Apps","Bot","Search","withSplitting","getComponent","_Component","WithSplitting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Splitted","then","_ref","default","setState","inherits","createClass","key","value","Component","Story","Promise","all","__webpack_require__","e","bind","Game","Dapp","App","style_GlobalStyle","components_Nav","Main","Switch","Route","path","component","main","App_templateObject","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.219e31da.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset}\n    \n    @import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR:100,300,400,700|Oswald:600');\n\n    html {\n        height: 100%;\n        scroll-behavior:smooth;\n        -ms-overflow-style:none;    \n    }\n\n    ::-webkit-scrollbar {\n            display: none;\n    }\n    \n    body {\n        width: 100%;\n        min-height: 100%;\n\n        font-family: 'Noto Sans KR', sans-serif;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 1.5;\n        color: rgba(0, 0, 0, 0.84);\n\n        * { outline: none; box-sizing: border-box; }\n\n        a { text-decoration: none; }\n\n        h1, h2, h3, h4, h5, h6 {\n            font-family: 'Oswald', sans-serif;\n        }\n        h1 { font-size: 24px; }\n        h2 { font-size: 22px; }\n        h3 { font-size: 18px; }\n        h4 { font-size: 16px; }\n        h5 { font-size: 12px; }\n        h6 { font-size: 10px; }\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { QuoteLeft, Joystick, Bot } from 'styled-icons/boxicons-solid';\nimport { Apps } from 'styled-icons/material';\nimport { Search } from 'styled-icons/boxicons-regular';\n\nconst Nav = () => {\n    return (\n        <>\n            <Wrap>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\" activeStyle={active} style={link}>\n                            <QuoteLeft size=\"22\" />\n                            <span>이야기</span>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/game\" activeStyle={active} style={link}>\n                            <Joystick size=\"22\" />\n                            <span>게임</span>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/dapp\" activeStyle={active} style={link}>\n                            <Apps size=\"22\" />\n                            <span>댑</span>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/bot\" activeStyle={active} style={link}>\n                            <Bot size=\"22\" />\n                            <span>봇</span>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/Search\" activeStyle={active} style={link}>\n                            <Search size=\"22\" />\n                            <span>검색</span>\n                        </NavLink>\n                    </li>\n                </ul>\n            </Wrap>\n        </>\n    );\n};\n\nconst link = {\n    color: 'rgba(217, 217, 220, 1)',\n    transition: '0.5s'\n};\n\nconst active = {\n    color: 'rgba(107, 162, 208, 1)'\n};\n\nconst Wrap = styled.nav`\n    position: fixed;\n    bottom: 0;\n    z-index: 1;\n    width: 100%;\n\n    & > ul {\n        display: flex;\n        width: 100%;\n        height: 60px;\n        margin: 0 auto;\n        background-color: rgba(255, 255, 255, 1);\n        box-shadow: 0 1px 18px 0 rgba(0, 0, 0, 0.1);\n\n        @media (min-width: 1440px) {\n            & {\n                max-width: 1024px;\n                border-radius: 10px 10px 0 0;\n            }\n        }\n\n        & li {\n            flex: 1;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            & > a {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n\n                @media (min-width: 768px) {\n                    & {\n                        flex-direction: row;\n                    }\n                }\n\n                & span {\n                    @media (max-width: 768px) {\n                        & {\n                            font-size: 13px;\n                        }\n                    }\n                    @media (min-width: 768px) {\n                        & {\n                            padding: 0 0.5rem;\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Nav;\n","import React, { Component } from 'react';\n\nconst withSplitting = getComponent => {\n    // 여기서 getComponent 는 () => import('./SplitMe') 의 형태로 함수가 전달되야합니다.\n    class WithSplitting extends Component {\n        state = {\n            Splitted: null\n        };\n\n        constructor(props) {\n            super(props);\n            getComponent().then(({ default: Splitted }) => {\n                this.setState({\n                    Splitted\n                });\n            });\n        }\n\n        render() {\n            const { Splitted } = this.state;\n            if (!Splitted) {\n                return null;\n            }\n            return <Splitted {...this.props} />;\n        }\n    }\n\n    return WithSplitting;\n};\n\nexport default withSplitting;\n","import withSplitting from 'withSplitting';\n\n// export { default as Story } from './Story';\n// export { default as Game } from './Game';\n// export { default as Dapp } from './Dapp';\n// export { default as Bot } from './Bot';\n// export { default as Search } from './Search';\n\nexport const Story = withSplitting(() => import('./Story'));\nexport const Game = withSplitting(() => import('./Game'));\nexport const Dapp = withSplitting(() => import('./Dapp'));\nexport const Bot = withSplitting(() => import('./Bot'));\nexport const Search = withSplitting(() => import('./Search'));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport GlobalStyle from 'style/GlobalStyle';\nimport styled from 'styled-components';\n\nimport Nav from 'components/Nav';\nimport { Story, Game, Dapp, Bot, Search } from 'pages';\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <GlobalStyle />\n                <Nav />\n                <Main>\n                    <Switch>\n                        <Route exact path=\"/\" component={Story} />\n                        <Route path=\"/game\" component={Game} />\n                        <Route path=\"/dapp\" component={Dapp} />\n                        <Route path=\"/bot\" component={Bot} />\n                        <Route path=\"/search\" component={Search} />\n                    </Switch>\n                </Main>\n            </>\n        );\n    }\n}\n\nconst Main = styled.main`\n    & > section {\n        max-width: 1024px;\n        margin: 0 auto;\n        padding: 0 1rem 80px;\n        box-sizing: border-box;\n        animation: trigger 0.5s;\n\n        @media (min-width: 1024px) {\n            & {\n                /* background-color: red; */\n            }\n        }\n\n        @keyframes trigger {\n            from {\n                opacity: 0;\n            }\n            to {\n                opacity: 1;\n            }\n        }\n    }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from 'App';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}